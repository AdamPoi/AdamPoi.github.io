---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '@layouts/BaseLayout.astro';
import BlogComments from '@components/blog/BlogComments';
import Image from '@components/ui/images/Image.astro';
import { timeago } from '@support/time';
import { SITE } from '@/config';

export async function getStaticPaths() {
    const projects = await getCollection('projects');
    return projects.map((project) => ({
        params: { slug: project.slug },
        props: project,
    }));
}

type Props = CollectionEntry<'projects'>;

const project = Astro.props;
const { Content, remarkPluginFrontmatter } = await project.render();

const category: CollectionEntry<'categories'> = (
    await getCollection('categories')
)
    .filter((c) => c.slug === project.data.category)
    .pop();

const tags = project.data.tags ?? [category.slug];
const URL = Astro.url.href;
const ogImage = project.data.ogImage;
---

<BaseLayout
    title={project.data.title}
    description={project.data.description}
    ogImage={ogImage}
    structuredData={{
        '@context': 'https://schema.org',
        '@type': 'NewsArticle',
        '@id': URL,
        url: URL,
        description: project.data.description,
        image: [
            // project.data.banner,
        ],
        headline: project.data.title,
        datePublished: project.data.pubDate,
        dateModified: project.data.pubDate,
        author: [
            {
                '@type': 'Person',
                name: SITE.author,
                url: SITE.url,
            },
        ],
    }}
>
    <section class="mx-auto max-w-6xl px-4 pb-12 pt-8 sm:px-6 lg:px-8 lg:pt-12">
        <div class="shadow-none sm:shadow-sm mt-4 sm:mt-0">
            <div class="max-w-6xl">
                <Image
                    class="w-full object-cover rounded-tl-sm rounded-tr-sm"
                    src={project.data.banner}
                    alt={project.data.title}
                    draggable="false"
                    format="avif"
                    loading="lazy"
                />
            </div>
            <div
                class="sm:dark:bg-neutral-900/30 sm:bg-neutral-100 px-0 sm:px-6 md:px-10 lg:px-14 py-6"
            >
                <div class="mb-10">
                    <h2
                        class="block text-balance text-3xl font-bold tracking-tight text-neutral-800 dark:text-neutral-300 md:text-4xl lg:text-5xl"
                    >
                        {project.data.title}
                    </h2>
                    <ol class="flex items-center whitespace-nowrap mt-2">
                        <li class="inline-flex items-center">
                            <a
                                class="flex items-center text-sm text-orange-400 hover:text-orange-500 focus:outline-none focus:text-orange-500"
                                href=`/projects`
                            >
                                {category?.data?.title}
                            </a>
                            <svg
                                class="flex-shrink-0 size-5 text-neutral-500 dark:text-neutral-600 mx-2"
                                width="16"
                                height="16"
                                viewBox="0 0 16 16"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                aria-hidden="true"
                            >
                                <path
                                    d="M6 13L10 3"
                                    stroke="currentColor"
                                    stroke-linecap="round"></path>
                            </svg>
                        </li>
                        <li
                            class="inline-flex items-center text-sm text-neutral-500 hover:text-neutral-600 focus:outline-none focus:text-neutral-600 dark:text-neutral-500 dark:hover:text-neutral-400 dark:focus:text-neutral-400"
                        >
                            {timeago(project.data.pubDate)}
                            <svg
                                class="flex-shrink-0 size-5 text-neutral-500 dark:text-neutral-600 mx-2"
                                width="16"
                                height="16"
                                viewBox="0 0 16 16"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                aria-hidden="true"
                            >
                                <path
                                    d="M6 13L10 3"
                                    stroke="currentColor"
                                    stroke-linecap="round"></path>
                            </svg>
                        </li>
                    </ol>
                </div>

                <article
                    class="prose prose-blog sm:prose-lg dark:prose-invert max-w-none"
                >
                    <Content />
                </article>

                <div
                    class="mt-10 md:mt-14 mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
                >
                    <div
                        class="flex flex-wrap gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0"
                    >
                        {
                            tags.map((tag: string) => (
                                <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300">
                                    {tag}
                                </span>
                            ))
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
    <style is:inline>
        html.dark .astro-code,
        html.dark .astro-code span {
            color: var(--shiki-dark) !important;
            background-color: var(--shiki-dark-bg) !important;
        }
    </style>
</BaseLayout>
